{"version":3,"sources":["common.ts","api.ts","deploymentContext.tsx","steps/Deploy.tsx","steps/Upload.tsx","steps/Configure.tsx","steps/Central.tsx","steps/Site.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","API_VERSION","login","tenantId","subscriptionId","a","credential","InteractiveBrowserCredential","clientId","listCentralApps","credentials","client","IotCentralClient","apps","listBySubscription","createCentralApiToken","appSubDomain","getToken","bearer","tokenId","random","axios","put","roles","role","expiry","headers","Authorization","token","res","status","data","uploadPackage","location","subscriptionKey","onProgress","progress","post","waitForSuccess","body","header","matches","match","length","convertPackage","udid","re","RegExp","createOrUpdateDataSet","conversionId","datasetId","createTileset","createStateset","styles","keyName","type","rules","true","false","range","minimum","exclusiveMaximum","color","url","expectedResult","onSuccess","Promise","resolve","reject","intid","setInterval","get","clearInterval","result","createStaticApp","resourceGroup","parameters","ResourceManagementClient","deployments","createOrUpdate","properties","mode","template","siteTemplate","Object","entries","scriptUri","siteFolder","gitRepo","gitBranch","reduce","obj","key","value","deployment","id","outputs","staticWebsiteUrl","initialState","DeploymentContext","React","createContext","Provider","DeploymentProvider","children","useState","state","setState","read","useCallback","item","localStorage","getItem","write","setItem","authenticate","current","managementCredentials","store","toWrite","JSON","stringify","useEffect","parse","Deploy","memo","forwardRef","ref","enableNext","useContext","mapSubscriptionKey","setData","useImperativeHandle","process","nextEnabled","useRef","href","target","rel","src","alt","style","textAlign","TextField","label","onChange","e","val","classNames","mergeStyleSets","listGrid","width","display","justifyContent","alignItems","gap","listGridItem","padding","height","border","clickable","backgroundColor","cursor","button","flexDirection","Upload","items","setItems","uploadFn","acceptedFiles","forEach","file","reader","FileReader","onload","map","name","drawingUUid","uuid","readAsArrayBuffer","size","useDropzone","onDrop","maxFiles","accept","getRootProps","getInputProps","drawingUUIDs","filter","onRenderCell","index","className","Icon","iconName","ProgressIndicator","description","percentComplete","progressHidden","content","Configure","text","setText","execute","convIds","drawingUUID","convId","push","tileSetId","statesetId","Central","setApps","selectedApp","setSelectedApp","centralDetails","loadApps","findIndex","subdomain","appSubdomain","apiKey","onClick","displayName","DEPLOYMENT_VARIABLES","mapTilesetId","mapStatesetId","iotcApiKey","iotcSubdomain","Site","siteUrl","setSiteUrl","createSite","creationResult","wizardBody","footer","position","bottom","arrow","icon","Wizard","start","setCurrent","next","previous","useSteps","setNextEnabled","compRef","step","renderComponent","float","FontIcon","totalSteps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeIcons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13021395.chunk.js","sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\n//#region -------------------- TYPES -----------------------\r\nexport type DeploymentParameters = {\r\n  subscriptionId?: string;\r\n  tenantId?: string;\r\n  resourceGroup?: string;\r\n}\r\n\r\nexport type MapParameters = {\r\n  mapSubscriptionKey?: string,\r\n  drawingUUIDs?: string[],\r\n  tileSetId?: string,\r\n  statesetId?: string,\r\n}\r\n\r\nexport type IoTCentralParameters = { appSubdomain: string; apiKey: string }\r\n\r\nexport type SiteParameters = {\r\n  gitRepo: string,\r\n  gitBranch: string,\r\n  siteFolder: string,\r\n  scriptUri: string,\r\n  mapSubscriptionKey: string,\r\n  mapTilesetId: string,\r\n  mapStatesetId: string,\r\n  iotcApiKey: string,\r\n  iotcSubdomain: string\r\n}\r\n\r\n//#endregion TYPES\r\n\r\n\r\n\r\nexport function useSteps(start?: number): [number, () => void, () => void] {\r\n  const [current, setCurrent] = useState<number>(start || 0);\r\n\r\n  const next = useCallback(() => {\r\n    setCurrent((current) => current + 1);\r\n  }, [setCurrent]);\r\n\r\n  const previous = useCallback(() => {\r\n    setCurrent((current) => current - 1);\r\n  }, [setCurrent]);\r\n\r\n  return [current, next, previous];\r\n}\r\n\r\nexport function formatBytes(bytes: number, decimals = 2): string {\r\n  if (bytes === 0) return \"0 Bytes\";\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\r\n}\r\n\r\nexport type Submit = {\r\n  submitting: boolean;\r\n  submit: () => void;\r\n  reset: () => void;\r\n};\r\nexport function useSubmit(init: boolean) {\r\n  const [value, setValue] = useState(init);\r\n\r\n  const reset = useCallback(() => {\r\n    setValue(false);\r\n  }, [setValue]);\r\n\r\n  const set = useCallback(() => {\r\n    setValue(true);\r\n  }, [setValue]);\r\n\r\n  return { submitting: value, set, reset };\r\n}\r\n\r\nexport type StepProps = {\r\n  // visible: boolean;\r\n  // submit: boolean;\r\n  // resetSubmit: () => void;\r\n  enableNext: () => void;\r\n};\r\n\r\nexport type StepElem = {\r\n  process: () => void | Promise<void>;\r\n};\r\n\r\nexport function useStorage() {\r\n  const read = useCallback((item: string) => {\r\n    return localStorage.getItem(item);\r\n  }, []);\r\n\r\n  const write = useCallback((item: string, value: string) => {\r\n    return localStorage.setItem(item, value);\r\n  }, []);\r\n  return { read, write };\r\n}\r\n","import { AzureMapsManagementClient } from \"@azure/arm-maps\";\r\nimport { InteractiveBrowserCredential } from \"@azure/identity\";\r\nimport { ResourceManagementClient } from \"@azure/arm-resources\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { IotCentralClient } from \"@azure/arm-iotcentral\";\r\nimport siteTemplate from './azure/azuredeploy_site.json';\r\nimport { SiteParameters } from \"./common\";\r\n\r\nconst RESOURCE_GROUP = \"lucamaps\";\r\nconst ACCOUNT_NAME = \"iim-account\";\r\nconst API_VERSION = \"2.0\";\r\nconst IOTC_API_VERSION = \"1.0\";\r\n\r\n// const client = new AzureMapsManagementClient(credential, SUBSCRIPTION_ID);\r\n\r\nexport async function createResourceGroup(\r\n  armClient: ResourceManagementClient,\r\n  location?: string\r\n) {\r\n  const exists = await armClient.resourceGroups.checkExistence(RESOURCE_GROUP);\r\n  if (exists.body) {\r\n    return;\r\n  }\r\n  await armClient.resourceGroups.createOrUpdate(RESOURCE_GROUP, {\r\n    location: location ?? \"westeurope\",\r\n  });\r\n}\r\n\r\nexport async function creator(client: AzureMapsManagementClient) {\r\n  const account = await client.accounts.createOrUpdate(\r\n    RESOURCE_GROUP,\r\n    ACCOUNT_NAME,\r\n    {\r\n      sku: { name: \"G2\" },\r\n      kind: \"Gen2\",\r\n    }\r\n  );\r\n  console.log(account);\r\n}\r\n\r\nexport async function login(tenantId: string, subscriptionId: string) {\r\n  const credential = new InteractiveBrowserCredential({\r\n    clientId: \"0523c52d-806a-4f07-9dda-8950eb13055f\",\r\n    tenantId,\r\n  });\r\n\r\n  return credential;\r\n}\r\n\r\nexport async function listCentralApps(\r\n  credentials: InteractiveBrowserCredential,\r\n  subscriptionId: string\r\n) {\r\n  const client = new IotCentralClient(credentials, subscriptionId);\r\n  return client.apps.listBySubscription();\r\n}\r\n\r\nexport async function createCentralApiToken(\r\n  credentials: InteractiveBrowserCredential,\r\n  appSubDomain: string\r\n): Promise<string | null> {\r\n  const bearer = await credentials.getToken(\r\n    \"https://apps.azureiotcentral.com/user_impersonation\"\r\n  );\r\n  const tokenId = `iotc-indm-${Math.floor(Math.random() * 20000)}`;\r\n  const res = await axios.put<{\r\n    id: string;\r\n    roles: {\r\n      role: string;\r\n    }[];\r\n    expiry: string;\r\n    token: string;\r\n  }>(\r\n    `https://${appSubDomain}.azureiotcentral.com/api/apiTokens/${tokenId}?api-version=${IOTC_API_VERSION}`,\r\n    {\r\n      roles: [\r\n        {\r\n          role: \"ca310b8d-2f4a-44e0-a36e-957c202cd8d4\",\r\n        },\r\n      ],\r\n      expiry: \"2023-12-31T23:59:00.000Z\",\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${bearer.token}`,\r\n      },\r\n    }\r\n  );\r\n  if (res.status === 200) {\r\n    return res.data.token;\r\n  }\r\n  return null;\r\n}\r\n\r\nexport async function uploadPackage(\r\n  data: any,\r\n  location: string,\r\n  subscriptionKey: string,\r\n  onProgress: (progress: number) => void\r\n) {\r\n  let progress = 0;\r\n  const res = await axios.post<any>(\r\n    `https://${location}.atlas.microsoft.com/mapData?api-version=${API_VERSION}&dataFormat=dwgzippackage&subscription-key=${subscriptionKey}`,\r\n    data,\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/octet-stream\",\r\n      },\r\n    }\r\n  );\r\n  onProgress((progress += 0.1));\r\n  if (res.headers[\"operation-location\"]) {\r\n    // call this until 200 and return drawing id\r\n    return await waitForSuccess(\r\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\r\n      {\r\n        body: \"status\",\r\n        header: \"resource-location\",\r\n      },\r\n      (res) => {\r\n        const re =\r\n          /https:\\/\\/us\\.atlas\\.microsoft\\.com\\/mapData\\/metadata\\/([\\S]+)\\?api-version=2\\.0/;\r\n        const matches = res.headers[\"resource-location\"].match(re);\r\n        if (matches && matches.length === 2) {\r\n          return matches[1];\r\n        }\r\n        return null;\r\n      },\r\n      onProgress\r\n    );\r\n  }\r\n}\r\n\r\nexport async function convertPackage(\r\n  udid: string,\r\n  location: string,\r\n  subscriptionKey: string\r\n) {\r\n  const res = await axios.post<any>(\r\n    `https://${location}.atlas.microsoft.com/conversions?api-version=${API_VERSION}&udid=${udid}&inputType=DWG&subscription-key=${subscriptionKey}&outputOntology=facility-2.0`\r\n  );\r\n  if (res.headers[\"operation-location\"]) {\r\n    // call this until 200 and return drawing id\r\n    return await waitForSuccess(\r\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\r\n      {\r\n        body: \"status\",\r\n        header: \"resource-location\",\r\n      },\r\n      (res) => {\r\n        const re = new RegExp(\r\n          `https://${location}.atlas.microsoft.com/conversions/([\\\\S]+)\\\\?api-version=${API_VERSION}`\r\n        );\r\n        const matches = res.headers[\"resource-location\"].match(re);\r\n        if (matches && matches.length === 2) {\r\n          return matches[1];\r\n        }\r\n        return null;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function createOrUpdateDataSet(\r\n  conversionId: string,\r\n  location: string,\r\n  subscriptionKey: string,\r\n  datasetId?: string\r\n) {\r\n  const res = await axios.post<any>(\r\n    `https://${location}.atlas.microsoft.com/datasets?api-version=${API_VERSION}&conversionId=${conversionId}&subscription-key=${subscriptionKey}${datasetId ? `&datasetId=${datasetId}` : \"\"\r\n    }`\r\n  );\r\n  if (res.headers[\"operation-location\"]) {\r\n    // call this until 200 and return drawing id\r\n    return await waitForSuccess(\r\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\r\n      {\r\n        body: \"status\",\r\n        header: \"resource-location\",\r\n      },\r\n      (res) => {\r\n        const re = new RegExp(\r\n          `https://${location}.atlas.microsoft.com/datasets/([\\\\S]+)\\\\?api-version=${API_VERSION}`\r\n        );\r\n        const matches = res.headers[\"resource-location\"].match(re);\r\n        if (matches && matches.length === 2) {\r\n          return matches[1];\r\n        }\r\n        return null;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function createTileset(\r\n  datasetId: string,\r\n  location: string,\r\n  subscriptionKey: string\r\n) {\r\n  const res = await axios.post<any>(\r\n    `https://${location}.atlas.microsoft.com/tilesets?api-version=${API_VERSION}&datasetID=${datasetId}&subscription-key=${subscriptionKey}`\r\n  );\r\n  if (res.headers[\"operation-location\"]) {\r\n    // call this until 200 and return drawing id\r\n    return await waitForSuccess(\r\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\r\n      {\r\n        body: \"status\",\r\n        header: \"resource-location\",\r\n      },\r\n      (res) => {\r\n        const re = new RegExp(\r\n          `https://${location}.atlas.microsoft.com/tilesets/([\\\\S]+)\\\\?api-version=${API_VERSION}`\r\n        );\r\n        const matches = res.headers[\"resource-location\"].match(re);\r\n        if (matches && matches.length === 2) {\r\n          return matches[1];\r\n        }\r\n        return null;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport async function createStateset(\r\n  datasetId: string,\r\n  location: string,\r\n  subscriptionKey: string\r\n) {\r\n  const res = await axios.post<any>(\r\n    `https://${location}.atlas.microsoft.com/featurestatesets?api-version=${API_VERSION}&datasetId=${datasetId}&subscription-key=${subscriptionKey}`,\r\n    {\r\n      styles: [\r\n        {\r\n          keyName: \"occupied\",\r\n          type: \"boolean\",\r\n          rules: [\r\n            {\r\n              true: \"#8e5a00\",\r\n              false: \"#FFFFFF\",\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          keyName: \"temperature\",\r\n          type: \"number\",\r\n          rules: [\r\n            {\r\n              range: {\r\n                minimum: \"13\",\r\n                exclusiveMaximum: \"18\",\r\n              },\r\n              color: \"#0000FF\",\r\n            },\r\n            {\r\n              range: {\r\n                minimum: \"24\",\r\n              },\r\n              color: \"#FF0000\",\r\n            },\r\n            {\r\n              range: {\r\n                minimum: \"18\",\r\n                exclusiveMaximum: \"24\",\r\n              },\r\n              color: \"#00FF00\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  if (res.status === 200) {\r\n    return res.data[\"statesetId\"];\r\n  }\r\n  return null;\r\n}\r\n\r\nasync function waitForSuccess(\r\n  url: string,\r\n  expectedResult: {\r\n    body?: string;\r\n    header?: string;\r\n  },\r\n  onSuccess: (res: AxiosResponse<any>) => string | null,\r\n  onProgress?: (progress: number) => void\r\n): Promise<string> {\r\n  return new Promise<string>((resolve, reject) => {\r\n    let progress = 0;\r\n    const intid = setInterval(async () => {\r\n      onProgress?.((progress += 0.1));\r\n      try {\r\n        const res = await axios.get<any>(url);\r\n        if (\r\n          res.status === 200 &&\r\n          ((expectedResult.body &&\r\n            res.data[expectedResult.body] === \"Succeeded\") ||\r\n            (expectedResult.header && res.headers[expectedResult.header]))\r\n        ) {\r\n          clearInterval(intid);\r\n          onProgress?.(1);\r\n          const result = onSuccess(res);\r\n          if (result) {\r\n            resolve(result);\r\n          } else {\r\n            reject(result);\r\n          }\r\n        }\r\n      } catch (ex) {\r\n        reject();\r\n      }\r\n    }, 5000);\r\n  });\r\n}\r\n\r\nexport async function createStaticApp(\r\n  credentials: InteractiveBrowserCredential,\r\n  subscriptionId: string,\r\n  resourceGroup: string,\r\n  parameters: Partial<SiteParameters>\r\n) {\r\n  const client = new ResourceManagementClient(credentials, subscriptionId);\r\n  const deployment = await client.deployments.createOrUpdate(resourceGroup, 'staticsite', {\r\n    properties: {\r\n      mode: 'Incremental',\r\n      template: siteTemplate,\r\n      parameters: Object.entries({\r\n        ...parameters,\r\n        scriptUri: 'https://raw.githubusercontent.com/lucadruda/iotc-indoor-maps/indoor_maps/setup/src/azure/deployment_az.sh',\r\n        siteFolder: 'map-react',\r\n        gitRepo: 'https://github.com/lucadruda/iotc-indoor-maps',\r\n        gitBranch: 'indoor_maps'\r\n      } as SiteParameters).reduce((obj: any, [key, value]) => {\r\n        obj[key] = { value };\r\n        return obj\r\n      }, {})\r\n    }\r\n  });\r\n  if (deployment.id) {\r\n    if (deployment.properties?.outputs && deployment.properties.outputs.staticWebsiteUrl)\r\n      return deployment.properties.outputs.staticWebsiteUrl;\r\n  }\r\n  return null;\r\n\r\n}\r\n","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT License.\r\n\r\nimport { InteractiveBrowserCredential } from \"@azure/identity\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { login } from \"./api\";\r\nimport { DeploymentParameters, IoTCentralParameters, MapParameters, useStorage } from \"./common\";\r\n\r\ntype IDeploymentState = DeploymentParameters & MapParameters & {\r\n  managementCredentials?: InteractiveBrowserCredential;\r\n  centralDetails?: IoTCentralParameters;\r\n};\r\n\r\nconst initialState: IDeploymentState = {};\r\n\r\nexport type IDeploymentContext = IDeploymentState & {\r\n  store: (data: Partial<IDeploymentState>) => void;\r\n};\r\n\r\nconst DeploymentContext = React.createContext({} as IDeploymentContext);\r\nconst { Provider } = DeploymentContext;\r\n\r\nconst DeploymentProvider: React.FC<{ children: React.ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [state, setState] = useState<IDeploymentState>(initialState);\r\n  const { read, write } = useStorage();\r\n  const authenticate = useCallback(\r\n    async (tenantId, subscriptionId) => {\r\n      const client = await login(tenantId, subscriptionId);\r\n      setState((current) => ({ ...current, managementCredentials: client }));\r\n    },\r\n    [setState]\r\n  );\r\n\r\n  const store = useCallback(\r\n    (data: Partial<IDeploymentState>) => {\r\n      setState((current) => {\r\n        const res = { ...current, ...data };\r\n        const { managementCredentials, ...toWrite } = res;\r\n        write(\"data\", JSON.stringify(toWrite));\r\n        return res;\r\n      });\r\n    },\r\n    [setState, write]\r\n  );\r\n\r\n  /** Recover from storage */\r\n  useEffect(() => {\r\n    const data = read(\"data\");\r\n    if (data) {\r\n      setState((current) => ({ ...current, ...JSON.parse(data) }));\r\n    }\r\n  }, [read]);\r\n\r\n  useEffect(() => {\r\n    if ((state.tenantId, state.subscriptionId)) {\r\n      authenticate(state.tenantId, state.subscriptionId);\r\n    }\r\n  }, [state.tenantId, state.subscriptionId, authenticate]);\r\n\r\n  const value = { ...state, store };\r\n\r\n  return <Provider value={value}>{children}</Provider>;\r\n};\r\n\r\nexport { DeploymentProvider as default, DeploymentContext };\r\n","import { TextField } from \"@fluentui/react\";\r\nimport React, {\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { DeploymentContext } from \"../deploymentContext\";\r\nimport { DeploymentParameters, MapParameters, StepElem, StepProps } from \"../common\";\r\n\r\nconst Deploy = React.memo(\r\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\r\n    const { store } = useContext(DeploymentContext);\r\n\r\n    const [data, setData] = useState<DeploymentParameters & MapParameters>(\r\n      // subscriptionId && tenantId && mapSubscriptionKey\r\n      //   ?\r\n      {\r\n        subscriptionId: \"2efa8bb6-25bf-4895-ba64-33806dd00780\",\r\n        tenantId: \"4ac2d501-d648-4bd0-8486-653a65f90fc7\",\r\n        mapSubscriptionKey: \"fzIwvA-PX2RNMM0P_9SoCSZHvX3iFD2712Qemctrqwk\",\r\n        resourceGroup: 'lucamaps'\r\n      }\r\n      // : { subscriptionId: \"\", tenantId: \"\", mapSubscriptionKey: \"\" }\r\n    );\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        process: () => {\r\n          store(data);\r\n        },\r\n      }),\r\n      [store, data]\r\n    );\r\n    const nextEnabled = useRef(false);\r\n\r\n    useEffect(() => {\r\n      if (\r\n        data.subscriptionId &&\r\n        data.tenantId &&\r\n        data.mapSubscriptionKey &&\r\n        !nextEnabled.current\r\n      ) {\r\n        enableNext();\r\n        nextEnabled.current = true;\r\n      }\r\n    }, [data, enableNext]);\r\n\r\n    return (\r\n      <div>\r\n        <h2>Deploy Maps account to your Azure Subscription</h2>\r\n        <p>\r\n          Click on the button below to deploy the solution to your azure\r\n          subscription.\r\n        </p>\r\n        <a\r\n          href=\"https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Flucadruda%2Fubs-workshop%2Findoor_maps%2Fsetup%2Fazure%2Fazuredeploy.json%3Ftoken%3DAARKIISFGX2MRU7JK7VOZXTBNFEMQ\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <img src=\"https://aka.ms/deploytoazurebutton\" alt=\"Deploy to Azure\" />\r\n        </a>\r\n        <div></div>\r\n        <div style={{ textAlign: \"start\" }}>\r\n          <TextField\r\n            label=\"Subscription Id\"\r\n            value={data.subscriptionId}\r\n            onChange={(e, val) => {\r\n              setData((current) => ({ ...current, subscriptionId: val! }));\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Tenant Id\"\r\n            value={data.tenantId}\r\n            onChange={(e, val) => {\r\n              setData((current) => ({ ...current, tenantId: val! }));\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Resource Group Name\"\r\n            value={data.resourceGroup}\r\n            onChange={(e, val) => {\r\n              setData((current) => ({ ...current, resourceGroup: val! }));\r\n            }}\r\n          />\r\n          <TextField\r\n            label=\"Map Subscription Key\"\r\n            value={data.mapSubscriptionKey}\r\n            onChange={(e, val) => {\r\n              setData((current) => ({\r\n                ...current,\r\n                mapSubscriptionKey: val!,\r\n              }));\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  })\r\n);\r\nexport default Deploy;\r\n","import { Icon, mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { uploadPackage } from \"../api\";\r\nimport { DeploymentContext } from \"../deploymentContext\";\r\nimport { formatBytes, StepElem, StepProps } from \"../common\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  listGrid: {\r\n    width: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 20,\r\n  },\r\n  listGridItem: {\r\n    padding: 5,\r\n    width: 200,\r\n    height: 180,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    border: \"1px solid black\",\r\n  },\r\n  clickable: {\r\n    backgroundColor: \"#f3f2f1\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\ntype UploadData = {\r\n  progress: number;\r\n  name: string;\r\n  size: string;\r\n  uuid?: string;\r\n};\r\n\r\nconst Upload = React.memo(\r\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\r\n    const [items, setItems] = useState<(UploadData | null)[]>([null]);\r\n    const { mapSubscriptionKey, store, managementCredentials } =\r\n      useContext(DeploymentContext);\r\n\r\n    const nextEnabled = useRef(false);\r\n\r\n    const uploadFn = useCallback(\r\n      (acceptedFiles) => {\r\n        acceptedFiles.forEach((file: File) => {\r\n          const reader = new FileReader();\r\n          reader.onload = async () => {\r\n            const drawingUUid = await uploadPackage(\r\n              reader.result,\r\n              \"us\",\r\n              mapSubscriptionKey!,\r\n              (progress) => {\r\n                setItems((current) =>\r\n                  current.map((i) => {\r\n                    if (i?.name === file.name) {\r\n                      return { ...i, progress };\r\n                    }\r\n                    return i;\r\n                  })\r\n                );\r\n              }\r\n            );\r\n            if (drawingUUid) {\r\n              setItems((current) =>\r\n                current.map((i) => {\r\n                  if (i?.name === file.name) {\r\n                    return { ...i, uuid: drawingUUid };\r\n                  }\r\n                  return i;\r\n                })\r\n              );\r\n            }\r\n          };\r\n\r\n          reader.readAsArrayBuffer(file);\r\n          setItems((current) => [\r\n            { name: file.name, size: formatBytes(file.size), progress: 0 },\r\n            ...current,\r\n          ]);\r\n        });\r\n      },\r\n      [setItems, mapSubscriptionKey]\r\n    );\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n      onDrop: uploadFn,\r\n      maxFiles: 1,\r\n      accept: \".zip\",\r\n    });\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        process: () => {\r\n          store({\r\n            drawingUUIDs: items\r\n              .filter((i) => i?.uuid)\r\n              .map((i) => i?.uuid) as string[],\r\n          });\r\n        },\r\n      }),\r\n      [store, items]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (items.length > 1 && !nextEnabled.current) {\r\n        enableNext();\r\n        nextEnabled.current = true;\r\n      }\r\n    }, [items, enableNext]);\r\n\r\n    const onRenderCell = React.useCallback(\r\n      (item: UploadData | null, index) => {\r\n        return (\r\n          <div\r\n            key={`upload-b-${index}`}\r\n            className={`${classNames.listGridItem} ${\r\n              item === null ? classNames.clickable : \"\"\r\n            }`}\r\n          >\r\n            {item === null ? (\r\n              <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                <div className={classNames.button}>\r\n                  <Icon iconName=\"AddIn\" />\r\n                  <h3>Add a drawing</h3>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h2>{item.name}</h2>\r\n                <ProgressIndicator\r\n                  label={\r\n                    item.progress < 1\r\n                      ? \"Uploading package...\"\r\n                      : \"Package ready.\"\r\n                  }\r\n                  description={item.uuid ?? \"\"}\r\n                  percentComplete={item.progress}\r\n                  progressHidden={item.progress === 1}\r\n                />\r\n                <h3>{item.size}</h3>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n      [getInputProps, getRootProps]\r\n    );\r\n\r\n    if (!mapSubscriptionKey || !managementCredentials) {\r\n      return <div>loading</div>;\r\n    }\r\n    return <div className={classNames.listGrid}>{items.map(onRenderCell)}</div>;\r\n  })\r\n);\r\n\r\nexport default Upload;\r\n","import { mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\r\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  convertPackage,\r\n  createOrUpdateDataSet,\r\n  createStateset,\r\n  createTileset,\r\n} from \"../api\";\r\nimport { DeploymentContext } from \"../deploymentContext\";\r\nimport { StepElem, StepProps } from \"../common\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  content: {\r\n    width: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst Configure = React.memo(\r\n  React.forwardRef<StepElem, StepProps>(() => {\r\n    const [text, setText] = useState({ label: \"\", description: \"\" });\r\n    const { drawingUUIDs, mapSubscriptionKey, store } =\r\n      useContext(DeploymentContext);\r\n\r\n    const execute = useCallback(async () => {\r\n      if (!drawingUUIDs) {\r\n        return;\r\n      }\r\n      const convIds: string[] = [];\r\n      for (const drawingUUID of drawingUUIDs) {\r\n        setText({\r\n          label: `Converting packages`,\r\n          description: `Converting package ${drawingUUID}`,\r\n        });\r\n        const convId = await convertPackage(\r\n          drawingUUID,\r\n          \"us\",\r\n          mapSubscriptionKey!\r\n        );\r\n        if (convId) {\r\n          convIds.push(convId);\r\n        }\r\n      }\r\n\r\n      let datasetId;\r\n      for (const convId of convIds) {\r\n        setText({\r\n          label: `Creating data set`,\r\n          description: datasetId ?? \"This might take some time.\",\r\n        });\r\n        datasetId = await createOrUpdateDataSet(\r\n          convId,\r\n          \"us\",\r\n          mapSubscriptionKey!,\r\n          datasetId\r\n        );\r\n      }\r\n      setText({\r\n        label: `Dataset created. Creating tileset ...`,\r\n        description: datasetId ?? \"\",\r\n      });\r\n      if (datasetId) {\r\n        const tileSetId = await createTileset(\r\n          datasetId,\r\n          \"us\",\r\n          mapSubscriptionKey!\r\n        );\r\n        setText({\r\n          label: `Tileset created. Creating stateset ...`,\r\n          description: tileSetId ?? \"\",\r\n        });\r\n        if (tileSetId) {\r\n          const statesetId = await createStateset(\r\n            datasetId,\r\n            \"us\",\r\n            mapSubscriptionKey!\r\n          );\r\n          setText({\r\n            label: `State set created.`,\r\n            description: statesetId ?? \"\",\r\n          });\r\n          store({ tileSetId, statesetId });\r\n        }\r\n      }\r\n    }, [drawingUUIDs, mapSubscriptionKey, setText, store]);\r\n\r\n    useEffect(() => {\r\n      execute();\r\n    }, [execute]);\r\n\r\n    return (\r\n      <div className={classNames.content}>\r\n        <ProgressIndicator {...text} />\r\n      </div>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Configure;\r\n","import { IotCentralModels } from \"@azure/arm-iotcentral\";\r\nimport { Icon, mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\r\nimport React, {\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { createCentralApiToken, listCentralApps } from \"../api\";\r\nimport { DeploymentContext } from \"../deploymentContext\";\r\nimport { StepElem, StepProps } from \"../common\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  listGrid: {\r\n    width: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    gap: 20,\r\n  },\r\n  listGridItem: {\r\n    padding: 5,\r\n    width: 200,\r\n    height: 180,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    display: \"inline-flex\",\r\n    justifyContent: \"center\",\r\n    border: \"1px solid black\",\r\n  },\r\n  clickable: {\r\n    backgroundColor: \"#f3f2f1\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#FFFFFF\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  button: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n});\r\n\r\nconst Central = React.memo(\r\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\r\n    const [apps, setApps] = useState<IotCentralModels.App[] | null>(null);\r\n    const [selectedApp, setSelectedApp] = useState<number | null>(null);\r\n    const { managementCredentials, subscriptionId, centralDetails, store } =\r\n      useContext(DeploymentContext);\r\n\r\n    const nextEnabled = useRef(false);\r\n\r\n    const loadApps = useCallback(\r\n      async (credentials, subscriptionId) => {\r\n        setApps(await listCentralApps(credentials, subscriptionId));\r\n      },\r\n      [setApps]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (apps && centralDetails) {\r\n        setSelectedApp(\r\n          apps.findIndex((a) => a.subdomain === centralDetails.appSubdomain)\r\n        );\r\n      }\r\n    }, [apps, centralDetails]);\r\n\r\n    useEffect(() => {\r\n      if (managementCredentials) {\r\n        loadApps(managementCredentials, subscriptionId);\r\n      }\r\n    }, [loadApps, managementCredentials, subscriptionId]);\r\n\r\n    useEffect(() => {\r\n      if (selectedApp !== null && !nextEnabled.current) {\r\n        enableNext();\r\n        nextEnabled.current = true;\r\n      }\r\n    }, [selectedApp, enableNext]);\r\n\r\n    useImperativeHandle(\r\n      ref,\r\n      () => ({\r\n        process: async () => {\r\n          const apiKey = await createCentralApiToken(\r\n            managementCredentials!,\r\n            apps![selectedApp!].subdomain!\r\n          );\r\n          if (apiKey) {\r\n            store({\r\n              centralDetails: {\r\n                appSubdomain: apps![selectedApp!].subdomain!,\r\n                apiKey,\r\n              },\r\n            });\r\n          }\r\n        },\r\n      }),\r\n      [managementCredentials, apps, selectedApp, store]\r\n    );\r\n\r\n    const onRenderCell = React.useCallback(\r\n      (item: IotCentralModels.App | null, index) => {\r\n        return (\r\n          <div\r\n            key={`central-app-${index}`}\r\n            className={`${classNames.listGridItem} ${\r\n              selectedApp !== index ? classNames.clickable : \"\"\r\n            }`}\r\n            onClick={() => {\r\n              setSelectedApp(index);\r\n            }}\r\n          >\r\n            <div>\r\n              <h2>{item?.displayName}</h2>\r\n              <p>{`https://${item?.subdomain}.azureiotcentral.com`}</p>\r\n              {selectedApp === index && <Icon iconName=\"CheckMark\" />}\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n      [setSelectedApp, selectedApp]\r\n    );\r\n    if (!apps) {\r\n      return (\r\n        <div className={\"centered\"}>\r\n          <ProgressIndicator className=\"pageload\" />\r\n        </div>\r\n      );\r\n    }\r\n    return <div className={classNames.listGrid}>{apps.map(onRenderCell)}</div>;\r\n  })\r\n);\r\n\r\nexport default Central;\r\n","import { mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\r\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { createStaticApp, login } from \"../api\";\r\nimport { DeploymentContext } from \"../deploymentContext\";\r\nimport { SiteParameters, StepElem, StepProps } from \"../common\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  content: {\r\n    width: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst DEPLOYMENT_VARIABLES: Partial<SiteParameters> = {\r\n  mapSubscriptionKey: \"aipGMyZjmHtjPnOTGTCbWQawlMoQ6MOwVLN2QFpa4fw\",\r\n  mapTilesetId: \"0d76d5d2-36fc-1aaa-d511-0302eb3e4bc4\",\r\n  mapStatesetId: \"9587d752-caad-37a2-bd2a-a4db8afc0e70\",\r\n  iotcApiKey:\r\n    \"SharedAccessSignature sr=3a5279fe-8817-4181-af6d-27323aa9e6d1&sig=RP1WYdta%2F8kFSHZ3pf7Cu2Gruoa07Gp2ye8rBwpYhmY%3D&skn=API&se=1665043186510\",\r\n  iotcSubdomain: \"ubsmap\",\r\n};\r\n\r\nconst Site = React.memo(\r\n  React.forwardRef<StepElem, StepProps>(() => {\r\n    const [text, setText] = useState({\r\n      label: \"Creating web site\",\r\n      description: \"This might take a while. Please don't close the page until creation is completed.\",\r\n    });\r\n    const [siteUrl, setSiteUrl] = useState<string | null>(null);\r\n    const { managementCredentials, subscriptionId, resourceGroup } =\r\n      useContext(DeploymentContext);\r\n\r\n    // const nextEnabled = useRef(false);\r\n\r\n    const createSite = useCallback(async (managementCredentials, subscriptionId, resourceGroup) => {\r\n      const credentials = await login('4ac2d501-d648-4bd0-8486-653a65f90fc7', '2efa8bb6-25bf-4895-ba64-33806dd00780');\r\n      debugger;\r\n      const creationResult = await createStaticApp(\r\n        credentials,\r\n        '2efa8bb6-25bf-4895-ba64-33806dd00780',\r\n        'lucamaps',\r\n        DEPLOYMENT_VARIABLES\r\n      );\r\n      if (creationResult) {\r\n        setSiteUrl(creationResult);\r\n      }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      // if (managementCredentials,subscriptionId) {\r\n\r\n      createSite(managementCredentials, subscriptionId, resourceGroup);\r\n      // }\r\n    }, [createSite, managementCredentials, subscriptionId]);\r\n\r\n    if (siteUrl) {\r\n      return (\r\n        <div className={classNames.content}>\r\n          <h2>Congratulations!!</h2>\r\n          <h4>Your website is available here:</h4>\r\n          <a href={siteUrl}>{siteUrl}</a>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className={classNames.content}>\r\n          <ProgressIndicator {...text} />\r\n        </div>\r\n      );\r\n    }\r\n  })\r\n);\r\n\r\nexport default Site;\r\n","import { FontIcon, mergeStyleSets } from \"@fluentui/react\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { StepElem, useSteps } from \"./common\";\r\nimport Deploy from \"./steps/Deploy\";\r\nimport Upload from \"./steps/Upload\";\r\nimport DeploymentProvider from \"./deploymentContext\";\r\nimport Configure from \"./steps/Configure\";\r\nimport Central from \"./steps/Central\";\r\nimport Site from \"./steps/Site\";\r\n\r\nconst styles = {\r\n  wizardBody: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    position: \"absolute\",\r\n    bottom: \"5%\",\r\n    justifyContent: \"space-between\",\r\n    width: \"70%\",\r\n  },\r\n  arrow: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    width: 100,\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  icon: {\r\n    cursor: \"pointer\",\r\n  },\r\n};\r\n\r\nconst classNames = mergeStyleSets(styles);\r\n\r\nconst App = React.memo(() => {\r\n  return (\r\n    <DeploymentProvider>\r\n      <Wizard />\r\n    </DeploymentProvider>\r\n  );\r\n});\r\n\r\nexport function Wizard() {\r\n  const [current, next, previous] = useSteps(4);\r\n  const [nextEnabled, setNextEnabled] = useState(false);\r\n  const totalSteps = 5;\r\n\r\n  const compRef = [\r\n    useRef<StepElem>(null),\r\n    useRef<StepElem>(null),\r\n    useRef<StepElem>(null),\r\n    useRef<StepElem>(null),\r\n    useRef<StepElem>(null),\r\n  ];\r\n\r\n  const renderComponent = (step: number) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <Deploy ref={compRef[0]} enableNext={() => setNextEnabled(true)} />\r\n        );\r\n      case 1:\r\n        return (\r\n          <Upload ref={compRef[1]} enableNext={() => setNextEnabled(true)} />\r\n        );\r\n      case 2:\r\n        return (\r\n          <Configure ref={compRef[2]} enableNext={() => setNextEnabled(true)} />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Central ref={compRef[3]} enableNext={() => setNextEnabled(true)} />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Site ref={compRef[4]} enableNext={() => setNextEnabled(true)} />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classNames.wizardBody}>\r\n      {renderComponent(current)}\r\n      <div className={classNames.footer}>\r\n        <div\r\n          className={classNames.arrow}\r\n          style={{\r\n            ...(current === 0 ? { display: \"none\" } : {}),\r\n            float: \"left\",\r\n          }}\r\n        >\r\n          <FontIcon\r\n            iconName=\"Back\"\r\n            onClick={previous}\r\n            className={classNames.icon}\r\n          />\r\n          <p>Previous</p>\r\n        </div>\r\n        <div\r\n          className={classNames.arrow}\r\n          style={{\r\n            ...(current === totalSteps - 1 || !nextEnabled\r\n              ? { display: \"none\" }\r\n              : {}),\r\n            float: \"right\",\r\n          }}\r\n        >\r\n          <p>Next</p>\r\n          <FontIcon\r\n            iconName=\"Forward\"\r\n            onClick={() => {\r\n              compRef[current].current?.process();\r\n              next();\r\n              setNextEnabled(false);\r\n            }}\r\n            className={classNames.icon}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { initializeIcons } from \"@fluentui/font-icons-mdl2\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}