{"version":3,"sources":["common.ts","deploymentContext.tsx","api.ts","media/deployment.png","media/outputs.png","steps/Deploy.tsx","steps/Upload.tsx","steps/Configure.tsx","steps/Central.tsx","steps/Site.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","DeploymentContext","React","createContext","Provider","DeploymentProvider","children","read","useCallback","item","localStorage","getItem","write","value","setItem","useState","data","console","JSON","parse","state","setState","store","current","res","toWrite","managementCredentials","stringify","API_VERSION","login","tenantId","a","credential","InteractiveBrowserCredential","clientId","getMapData","credentials","subscriptionId","mapAccountName","client","AzureMapsManagementClient","accounts","listBySubscription","mapAccount","find","ac","name","regexp","RegExp","matches","id","match","length","resourceGroupName","listKeys","keys","mapSubscriptionKey","primaryKey","mapLocation","listCentralApps","IotCentralClient","apps","createCentralApiToken","appUrl","getToken","bearer","split","tokenId","random","axios","put","roles","role","expiry","headers","Authorization","token","status","uploadPackage","location","subscriptionKey","onProgress","progress","post","waitForSuccess","body","header","convertPackage","udid","re","createOrUpdateDataSet","conversionId","datasetId","createTileset","createStateset","styles","keyName","type","rules","true","false","range","minimum","exclusiveMaximum","color","url","expectedResult","onSuccess","Promise","resolve","reject","intid","setInterval","get","clearInterval","result","createStaticApp","resourceGroup","parameters","ResourceManagementClient","deployments","createOrUpdate","properties","mode","template","siteTemplate","Object","entries","scriptUri","siteFolder","gitRepo","gitBranch","reduce","obj","key","deployment","outputs","staticWebsiteUrl","classNames","mergeStyleSets","imageContainer","display","flexDirection","justifyContent","marginVertical","width","images","container","alignItems","deployBtn","marginTop","marginBottom","form","textAlign","formItems","clearText","pointerEvents","cursor","Deploy","memo","forwardRef","ref","enableNext","useContext","setData","useImperativeHandle","process","creds","mapData","nextEnabled","useRef","useEffect","className","href","target","rel","src","alt","DeploymentImage","Outputs","TextField","label","required","iconProps","iconName","onClick","e","style","onChange","val","listGrid","gap","listGridItem","padding","height","border","clickable","backgroundColor","button","coordinates","coordinatesForm","paddingHorizontal","description","margin","Upload","setCoordinates","drawingUUIDs","items","setItems","uploadFn","acceptedFiles","forEach","file","reader","FileReader","onload","map","drawingUUid","uuid","readAsArrayBuffer","size","useDropzone","onDrop","maxFiles","accept","getRootProps","getInputProps","filter","centerCoordinates","onRenderCell","index","Icon","ProgressIndicator","percentComplete","progressHidden","toString","Configure","text","setText","executing","setExecuting","statesetId","execute","convIds","drawingUUID","convId","push","tileSetId","DefaultButton","undefined","flexWrap","overflowY","selected","Central","setApps","selectedApp","setSelectedApp","centralDetails","loadApps","findIndex","subdomain","apiKey","displayName","content","Site","siteUrl","createSite","iotcApiKey","iotcAppUrl","mapTilesetId","mapStatesetId","mapLatitude","mapLongitude","wizardBody","footer","arrow","icon","justifyConten","Wizard","start","setCurrent","next","previous","useSteps","setNextEnabled","compRef","step","renderComponent","primary","visibility","disabled","totalSteps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeIcons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a558e4db.chunk.js","sourcesContent":["import {\n  AccessToken,\n  InteractiveBrowserCredential,\n  TokenCredential,\n} from \"@azure/identity\";\nimport { useCallback, useState } from \"react\";\n\n//#region -------------------- TYPES -----------------------\nexport type DeploymentParameters = {\n  subscriptionId?: string;\n  tenantId?: string;\n  resourceGroup?: string;\n};\n\nexport type DrawingUploadData = {\n  progress: number;\n  name: string;\n  size: string;\n  uuid?: string;\n};\n\nexport type MapParameters = {\n  mapAccountName?: string;\n  mapLocation?: string;\n  mapSubscriptionKey?: string;\n  drawingUUIDs?: DrawingUploadData[];\n  tileSetId?: string;\n  statesetId?: string;\n  centerCoordinates?: [number, number];\n};\n\nexport type IoTCentralParameters = { appUrl: string; apiKey: string };\n\nexport type SiteParameters = {\n  gitRepo: string;\n  gitBranch: string;\n  siteFolder: string;\n  scriptUri: string;\n  mapSubscriptionKey: string;\n  mapLatitude?: string;\n  mapLongitude?: string;\n  mapTilesetId: string;\n  mapStatesetId: string;\n  iotcApiKey: string;\n  iotcAppUrl: string;\n};\n\n//#endregion TYPES\n\nexport function useSteps(start?: number): [number, () => void, () => void] {\n  const [current, setCurrent] = useState<number>(start || 0);\n\n  const next = useCallback(() => {\n    setCurrent((current) => current + 1);\n  }, [setCurrent]);\n\n  const previous = useCallback(() => {\n    setCurrent((current) => current - 1);\n  }, [setCurrent]);\n\n  return [current, next, previous];\n}\n\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (bytes === 0) return \"0 Bytes\";\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + \" \" + sizes[i];\n}\n\nexport type Submit = {\n  submitting: boolean;\n  submit: () => void;\n  reset: () => void;\n};\nexport function useSubmit(init: boolean) {\n  const [value, setValue] = useState(init);\n\n  const reset = useCallback(() => {\n    setValue(false);\n  }, [setValue]);\n\n  const set = useCallback(() => {\n    setValue(true);\n  }, [setValue]);\n\n  return { submitting: value, set, reset };\n}\n\nexport type StepProps = {\n  // visible: boolean;\n  // submit: boolean;\n  // resetSubmit: () => void;\n  enableNext: () => void;\n};\n\nexport type StepElem = {\n  process: () => void | Promise<void>;\n};\n\nexport function useStorage() {\n  const read = useCallback((item: string) => {\n    return localStorage.getItem(item);\n  }, []);\n\n  const write = useCallback((item: string, value: string) => {\n    return localStorage.setItem(item, value);\n  }, []);\n  return { read, write };\n}\n\n/** ------------- UTILITY ------------------ */\n\nexport type AzureCredentials = InteractiveBrowserCredential | TokenCredential;\n\nexport function getCredentialForToken(\n  accessToken: AccessToken\n): TokenCredential {\n  return {\n    getToken: (scope) => {\n      return Promise.resolve(accessToken);\n    },\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { InteractiveBrowserCredential, TokenCredential } from \"@azure/identity\";\nimport React, { useCallback, useState } from \"react\";\nimport {\n  DeploymentParameters,\n  IoTCentralParameters,\n  MapParameters,\n  useStorage,\n} from \"./common\";\n\ntype IDeploymentState = DeploymentParameters &\n  MapParameters & {\n    managementCredentials?: InteractiveBrowserCredential | TokenCredential;\n    centralDetails?: IoTCentralParameters;\n    siteUrl?: string\n  };\n\nexport type IDeploymentContext = IDeploymentState & {\n  store: (data: Partial<IDeploymentState>) => void;\n};\n\nconst DeploymentContext = React.createContext({} as IDeploymentContext);\nconst { Provider } = DeploymentContext;\n\nconst DeploymentProvider: React.FC<{ children: React.ReactNode }> = ({\n  children,\n}) => {\n  const { read, write } = useStorage();\n  const [state, setState] = useState<IDeploymentState>(() => {\n    const data = read(\"data\");\n    if (data) {\n      console.log(data);\n      return {\n        ...JSON.parse(data),\n        // managementCredentials: getCredentialForToken({\n        //   token:\n        //     \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuY29yZS53aW5kb3dzLm5ldC8iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNjM1NzgyNDIzLCJuYmYiOjE2MzU3ODI0MjMsImV4cCI6MTYzNTc4NjMyMywiX2NsYWltX25hbWVzIjp7Imdyb3VwcyI6InNyYzEifSwiX2NsYWltX3NvdXJjZXMiOnsic3JjMSI6eyJlbmRwb2ludCI6Imh0dHBzOi8vZ3JhcGgud2luZG93cy5uZXQvNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3L3VzZXJzLzM4MTJjNWUwLTBkZDYtNDU2Mi05YWU2LWZkODk1MTI5ODE4NC9nZXRNZW1iZXJPYmplY3RzIn19LCJhY3IiOiIxIiwiYWlvIjoiQVVRQXUvOFRBQUFBZTFUNUhtLzQrU3pHSjdqcmgxdXIzeVFPRWo2TTRUYUMxd1lUYkRNM3c2cmZSQlo0Mit6aFoxcmZnYkFYeTFmTzJuQmhjNWFJLzBmZW9MQnpjRU5YeGc9PSIsImFtciI6WyJyc2EiLCJtZmEiXSwiYXBwaWQiOiIwNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDYiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6ImE1MWYxNDNmLTkyMmUtNDkzZi1hMzQzLTcxMDUwNjdlYzExYSIsImZhbWlseV9uYW1lIjoiRHJ1ZGEiLCJnaXZlbl9uYW1lIjoiTHVjYSIsImlwYWRkciI6IjkzLjUxLjUxLjEzNSIsIm5hbWUiOiJMdWNhIERydWRhIiwib2lkIjoiMzgxMmM1ZTAtMGRkNi00NTYyLTlhZTYtZmQ4OTUxMjk4MTg0Iiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTIxMjc1MjExODQtMTYwNDAxMjkyMC0xODg3OTI3NTI3LTIxMDk1NTk4IiwicHVpZCI6IjEwMDMzRkZGOTdBMjE1NzkiLCJyaCI6IjAuQVJvQXY0ajVjdkdHcjBHUnF5MTgwQkhiUjVWM3NBVGJqUnBHdS00Qy1lR19lMFlhQUlrLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6Im42SjdEd0QzWTZ6d19YU2Z4d1lNY0JCWFFqcTVfQ2JRbkR4anEtV2JBSVkiLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6Imx1ZHJ1ZGFAbWljcm9zb2Z0LmNvbSIsInVwbiI6Imx1ZHJ1ZGFAbWljcm9zb2Z0LmNvbSIsInV0aSI6Ik9fdFhNRlduY1VlbEs1SlNXdnRvQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfdGNkdCI6MTI4OTI0MTU0N30.SaHQdeHS5_b83qUei6sHiGf8r4xgJaqVkaUZ1G9VsPZXI8NPjHUQLb3jUsHmcR9q0eOvITKLjMrBMoTBS38yl2ZnRmPnSiwIElCF16j7kTx4XcSijoW0rAJeY8oyjdGtered5Lhs9XhgaQFWJLkgLyCDSipKX-auyWyWI6QN55zq4AIDVhzCNoskS5Tyv1FqfhDcE0Je7ltRC5duYgDo4lFWlW7obWHio0f5oUMCXAEo1Z7be0rp9nc45hlPg5-MO4j4RdDMjDXAsZWX2_ZEPpIUfiQ7ww3R-kaXFzvzVfWkTMTIco4JQeEa0cUGejhy0A2eqESQ--2GNMMqwqwdNA\",\n        //   expiresOnTimestamp: 1637914552,\n        // }),\n      };\n    }\n    // return {\n    //   managementCredentials: getCredentialForToken({\n    //     token:\n    //       \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL21hbmFnZW1lbnQuY29yZS53aW5kb3dzLm5ldC8iLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC83MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDcvIiwiaWF0IjoxNjM1NzgyNDIzLCJuYmYiOjE2MzU3ODI0MjMsImV4cCI6MTYzNTc4NjMyMywiX2NsYWltX25hbWVzIjp7Imdyb3VwcyI6InNyYzEifSwiX2NsYWltX3NvdXJjZXMiOnsic3JjMSI6eyJlbmRwb2ludCI6Imh0dHBzOi8vZ3JhcGgud2luZG93cy5uZXQvNzJmOTg4YmYtODZmMS00MWFmLTkxYWItMmQ3Y2QwMTFkYjQ3L3VzZXJzLzM4MTJjNWUwLTBkZDYtNDU2Mi05YWU2LWZkODk1MTI5ODE4NC9nZXRNZW1iZXJPYmplY3RzIn19LCJhY3IiOiIxIiwiYWlvIjoiQVVRQXUvOFRBQUFBZTFUNUhtLzQrU3pHSjdqcmgxdXIzeVFPRWo2TTRUYUMxd1lUYkRNM3c2cmZSQlo0Mit6aFoxcmZnYkFYeTFmTzJuQmhjNWFJLzBmZW9MQnpjRU5YeGc9PSIsImFtciI6WyJyc2EiLCJtZmEiXSwiYXBwaWQiOiIwNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDYiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6ImE1MWYxNDNmLTkyMmUtNDkzZi1hMzQzLTcxMDUwNjdlYzExYSIsImZhbWlseV9uYW1lIjoiRHJ1ZGEiLCJnaXZlbl9uYW1lIjoiTHVjYSIsImlwYWRkciI6IjkzLjUxLjUxLjEzNSIsIm5hbWUiOiJMdWNhIERydWRhIiwib2lkIjoiMzgxMmM1ZTAtMGRkNi00NTYyLTlhZTYtZmQ4OTUxMjk4MTg0Iiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTIxMjc1MjExODQtMTYwNDAxMjkyMC0xODg3OTI3NTI3LTIxMDk1NTk4IiwicHVpZCI6IjEwMDMzRkZGOTdBMjE1NzkiLCJyaCI6IjAuQVJvQXY0ajVjdkdHcjBHUnF5MTgwQkhiUjVWM3NBVGJqUnBHdS00Qy1lR19lMFlhQUlrLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6Im42SjdEd0QzWTZ6d19YU2Z4d1lNY0JCWFFqcTVfQ2JRbkR4anEtV2JBSVkiLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6Imx1ZHJ1ZGFAbWljcm9zb2Z0LmNvbSIsInVwbiI6Imx1ZHJ1ZGFAbWljcm9zb2Z0LmNvbSIsInV0aSI6Ik9fdFhNRlduY1VlbEs1SlNXdnRvQUEiLCJ2ZXIiOiIxLjAiLCJ3aWRzIjpbImI3OWZiZjRkLTNlZjktNDY4OS04MTQzLTc2YjE5NGU4NTUwOSJdLCJ4bXNfdGNkdCI6MTI4OTI0MTU0N30.SaHQdeHS5_b83qUei6sHiGf8r4xgJaqVkaUZ1G9VsPZXI8NPjHUQLb3jUsHmcR9q0eOvITKLjMrBMoTBS38yl2ZnRmPnSiwIElCF16j7kTx4XcSijoW0rAJeY8oyjdGtered5Lhs9XhgaQFWJLkgLyCDSipKX-auyWyWI6QN55zq4AIDVhzCNoskS5Tyv1FqfhDcE0Je7ltRC5duYgDo4lFWlW7obWHio0f5oUMCXAEo1Z7be0rp9nc45hlPg5-MO4j4RdDMjDXAsZWX2_ZEPpIUfiQ7ww3R-kaXFzvzVfWkTMTIco4JQeEa0cUGejhy0A2eqESQ--2GNMMqwqwdNA\",\n    //     expiresOnTimestamp: 1637914552,\n    //   }),\n    //   mapSubscriptionKey: \"aipGMyZjmHtjPnOTGTCbWQawlMoQ6MOwVLN2QFpa4fw\",\n    //   mapAccountName: \"ubs-azure-maps\",\n    // };\n    // return {};\n  });\n  // const authenticate = useCallback(\n  //   async (tenantId) => {\n  //     const client = await login(tenantId);\n  //     setState((current) => ({ ...current, managementCredentials: client }));\n  //   },\n  //   [setState]\n  // );\n\n  const store = useCallback(\n    (data: Partial<IDeploymentState>) => {\n      setState((current) => {\n        const res = { ...current, ...data };\n        const { managementCredentials, ...toWrite } = res;\n        write(\"data\", JSON.stringify(toWrite));\n        return res;\n      });\n    },\n    [setState, write]\n  );\n\n  // useEffect(() => {\n  //   if ((state.tenantId, state.subscriptionId)) {\n  //     authenticate(state.tenantId);\n  //   }\n  // }, [state.tenantId, state.subscriptionId, authenticate]);\n\n  const value = { ...state, store };\n\n  return <Provider value={value}>{children}</Provider>;\n};\n\nexport { DeploymentProvider as default, DeploymentContext };\n","import { AzureMapsManagementClient } from \"@azure/arm-maps\";\nimport { ResourceManagementClient } from \"@azure/arm-resources\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { IotCentralClient } from \"@azure/arm-iotcentral\";\nimport siteTemplate from \"./azure/azuredeploy_site.json\";\nimport { AzureCredentials, SiteParameters } from \"./common\";\nimport { InteractiveBrowserCredential } from \"@azure/identity\";\n\nconst RESOURCE_GROUP = \"lucamaps\";\nconst ACCOUNT_NAME = \"iim-account\";\nconst API_VERSION = \"2.0\";\nconst IOTC_API_VERSION = \"1.0\";\n\n// const client = new AzureMapsManagementClient(credential, SUBSCRIPTION_ID);\n\nexport async function createResourceGroup(\n  armClient: ResourceManagementClient,\n  location?: string\n) {\n  const exists = await armClient.resourceGroups.checkExistence(RESOURCE_GROUP);\n  if (exists.body) {\n    return;\n  }\n  await armClient.resourceGroups.createOrUpdate(RESOURCE_GROUP, {\n    location: location ?? \"westeurope\",\n  });\n}\n\nexport async function creator(client: AzureMapsManagementClient) {\n  const account = await client.accounts.createOrUpdate(\n    RESOURCE_GROUP,\n    ACCOUNT_NAME,\n    {\n      sku: { name: \"G2\" },\n      kind: \"Gen2\",\n    }\n  );\n  console.log(account);\n}\n\nexport async function login(tenantId: string) {\n  const credential = new InteractiveBrowserCredential({\n    clientId: \"0523c52d-806a-4f07-9dda-8950eb13055f\",\n    tenantId,\n  });\n\n  return credential;\n}\n\nexport async function getMapData(\n  credentials: AzureCredentials,\n  subscriptionId: string,\n  mapAccountName: string\n): Promise<{ mapSubscriptionKey: string; mapLocation: string,resourceGroupName:string } | null> {\n  const client = new AzureMapsManagementClient(credentials, subscriptionId);\n  const accounts = await client.accounts.listBySubscription();\n  const mapAccount = accounts.find((ac) => (ac as any).name === mapAccountName);\n  const regexp = new RegExp(\n    `/subscriptions/${subscriptionId}/resourceGroups/([\\\\S]+)/providers/Microsoft.Maps/accounts/${mapAccountName}`\n  );\n  const matches = (mapAccount as any).id.match(regexp);\n  if (matches && matches.length === 2) {\n    const resourceGroupName = matches[1];\n    const keys = await client.accounts.listKeys(\n      resourceGroupName,\n      mapAccountName\n    );\n    //TODO use real location\n    return { mapSubscriptionKey: keys.primaryKey!, mapLocation: \"us\",resourceGroupName };\n  }\n  return null;\n}\n\nexport async function listCentralApps(\n  credentials: AzureCredentials,\n  subscriptionId: string\n) {\n  const client = new IotCentralClient(credentials, subscriptionId);\n  return client.apps.listBySubscription();\n}\n\nexport async function createCentralApiToken(\n  credentials: AzureCredentials,\n  appUrl: string\n): Promise<string | null> {\n  const bearer = await credentials.getToken(\n    \"https://apps.azureiotcentral.com/user_impersonation\"\n  );\n  appUrl = appUrl.split(\".\")[0] + \".azureiotcentral.com\";\n  const tokenId = `iotc-indm-${Math.floor(Math.random() * 20000)}`;\n  const res = await axios.put<{\n    id: string;\n    roles: {\n      role: string;\n    }[];\n    expiry: string;\n    token: string;\n  }>(\n    `https://${appUrl}/api/apiTokens/${tokenId}?api-version=${IOTC_API_VERSION}`,\n    {\n      roles: [\n        {\n          role: \"ca310b8d-2f4a-44e0-a36e-957c202cd8d4\",\n        },\n      ],\n      expiry: \"2023-12-31T23:59:00.000Z\",\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${bearer!.token}`,\n      },\n    }\n  );\n  if (res.status === 200) {\n    return res.data.token;\n  }\n  return null;\n}\n\nexport async function uploadPackage(\n  data: any,\n  location: string,\n  subscriptionKey: string,\n  onProgress: (progress: number) => void\n) {\n  let progress = 0;\n  const res = await axios.post<any>(\n    `https://${location}.atlas.microsoft.com/mapData?api-version=${API_VERSION}&dataFormat=dwgzippackage&subscription-key=${subscriptionKey}`,\n    data,\n    {\n      headers: {\n        \"Content-Type\": \"application/octet-stream\",\n      },\n    }\n  );\n  onProgress((progress += 0.1));\n  if (res.headers[\"operation-location\"]) {\n    // call this until 200 and return drawing id\n    return await waitForSuccess(\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\n      {\n        body: \"status\",\n        header: \"resource-location\",\n      },\n      (res) => {\n        const re =\n          /https:\\/\\/us\\.atlas\\.microsoft\\.com\\/mapData\\/metadata\\/([\\S]+)\\?api-version=2\\.0/;\n        const matches = res.headers[\"resource-location\"].match(re);\n        if (matches && matches.length === 2) {\n          return matches[1];\n        }\n        return null;\n      },\n      onProgress\n    );\n  }\n}\n\nexport async function convertPackage(\n  udid: string,\n  location: string,\n  subscriptionKey: string\n) {\n  const res = await axios.post<any>(\n    `https://${location}.atlas.microsoft.com/conversions?api-version=${API_VERSION}&udid=${udid}&inputType=DWG&subscription-key=${subscriptionKey}&outputOntology=facility-2.0`\n  );\n  if (res.headers[\"operation-location\"]) {\n    // call this until 200 and return drawing id\n    return await waitForSuccess(\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\n      {\n        body: \"status\",\n        header: \"resource-location\",\n      },\n      (res) => {\n        const re = new RegExp(\n          `https://${location}.atlas.microsoft.com/conversions/([\\\\S]+)\\\\?api-version=${API_VERSION}`\n        );\n        const matches = res.headers[\"resource-location\"].match(re);\n        if (matches && matches.length === 2) {\n          return matches[1];\n        }\n        return null;\n      }\n    );\n  }\n}\n\nexport async function createOrUpdateDataSet(\n  conversionId: string,\n  location: string,\n  subscriptionKey: string,\n  datasetId?: string\n) {\n  const res = await axios.post<any>(\n    `https://${location}.atlas.microsoft.com/datasets?api-version=${API_VERSION}&conversionId=${conversionId}&subscription-key=${subscriptionKey}${\n      datasetId ? `&datasetId=${datasetId}` : \"\"\n    }`\n  );\n  if (res.headers[\"operation-location\"]) {\n    // call this until 200 and return drawing id\n    return await waitForSuccess(\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\n      {\n        body: \"status\",\n        header: \"resource-location\",\n      },\n      (res) => {\n        const re = new RegExp(\n          `https://${location}.atlas.microsoft.com/datasets/([\\\\S]+)\\\\?api-version=${API_VERSION}`\n        );\n        const matches = res.headers[\"resource-location\"].match(re);\n        if (matches && matches.length === 2) {\n          return matches[1];\n        }\n        return null;\n      }\n    );\n  }\n}\n\nexport async function createTileset(\n  datasetId: string,\n  location: string,\n  subscriptionKey: string\n) {\n  const res = await axios.post<any>(\n    `https://${location}.atlas.microsoft.com/tilesets?api-version=${API_VERSION}&datasetID=${datasetId}&subscription-key=${subscriptionKey}`\n  );\n  if (res.headers[\"operation-location\"]) {\n    // call this until 200 and return drawing id\n    return await waitForSuccess(\n      `${res.headers[\"operation-location\"]}&subscription-key=${subscriptionKey}`,\n      {\n        body: \"status\",\n        header: \"resource-location\",\n      },\n      (res) => {\n        const re = new RegExp(\n          `https://${location}.atlas.microsoft.com/tilesets/([\\\\S]+)\\\\?api-version=${API_VERSION}`\n        );\n        const matches = res.headers[\"resource-location\"].match(re);\n        if (matches && matches.length === 2) {\n          return matches[1];\n        }\n        return null;\n      }\n    );\n  }\n}\n\nexport async function createStateset(\n  datasetId: string,\n  location: string,\n  subscriptionKey: string\n) {\n  const res = await axios.post<any>(\n    `https://${location}.atlas.microsoft.com/featurestatesets?api-version=${API_VERSION}&datasetId=${datasetId}&subscription-key=${subscriptionKey}`,\n    {\n      styles: [\n        {\n          keyName: \"occupied\",\n          type: \"boolean\",\n          rules: [\n            {\n              true: \"#8e5a00\",\n              false: \"#FFFFFF\",\n            },\n          ],\n        },\n        {\n          keyName: \"temperature\",\n          type: \"number\",\n          rules: [\n            {\n              range: {\n                minimum: \"13\",\n                exclusiveMaximum: \"18\",\n              },\n              color: \"#0000FF\",\n            },\n            {\n              range: {\n                minimum: \"24\",\n              },\n              color: \"#FF0000\",\n            },\n            {\n              range: {\n                minimum: \"18\",\n                exclusiveMaximum: \"24\",\n              },\n              color: \"#00FF00\",\n            },\n          ],\n        },\n      ],\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  if (res.status === 200) {\n    return res.data[\"statesetId\"];\n  }\n  return null;\n}\n\nasync function waitForSuccess(\n  url: string,\n  expectedResult: {\n    body?: string;\n    header?: string;\n  },\n  onSuccess: (res: AxiosResponse<any>) => string | null,\n  onProgress?: (progress: number) => void\n): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    let progress = 0;\n    const intid = setInterval(async () => {\n      onProgress?.((progress += 0.1));\n      try {\n        const res = await axios.get<any>(url);\n        if (\n          res.status === 200 &&\n          ((expectedResult.body &&\n            res.data[expectedResult.body] === \"Succeeded\") ||\n            (expectedResult.header && res.headers[expectedResult.header]))\n        ) {\n          clearInterval(intid);\n          onProgress?.(1);\n          const result = onSuccess(res);\n          if (result) {\n            resolve(result);\n          } else {\n            reject(result);\n          }\n        }\n      } catch (ex) {\n        reject();\n      }\n    }, 5000);\n  });\n}\n\nexport async function createStaticApp(\n  credentials: AzureCredentials,\n  subscriptionId: string,\n  resourceGroup: string,\n  parameters: Partial<SiteParameters>\n) {\n  const client = new ResourceManagementClient(credentials, subscriptionId);\n  const deployment = await client.deployments.createOrUpdate(\n    'lucadruda',\n    \"staticsite\",\n    {\n      properties: {\n        mode: \"Incremental\",\n        template: siteTemplate,\n        parameters: Object.entries({\n          ...parameters,\n          scriptUri:\n            \"https://raw.githubusercontent.com/lucadruda/iotc-indoor-maps/indoor_maps/setup/src/azure/deployment_az.sh\",\n          siteFolder: \"map-react\",\n          gitRepo: \"https://github.com/lucadruda/iotc-indoor-maps\",\n          gitBranch: \"indoor_maps\",\n        } as SiteParameters).reduce((obj: any, [key, value]) => {\n          obj[key] = { value };\n          return obj;\n        }, {}),\n      },\n    }\n  );\n  if (deployment.id) {\n    if (\n      deployment.properties?.outputs &&\n      deployment.properties.outputs.staticWebsiteUrl\n    )\n      return deployment.properties.outputs.staticWebsiteUrl.value;\n  }\n  return null;\n}\n","export default __webpack_public_path__ + \"static/media/deployment.2fb82cf5.png\";","export default __webpack_public_path__ + \"static/media/outputs.92ed6285.png\";","import { mergeStyleSets, TextField } from \"@fluentui/react\";\nimport React, {\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { DeploymentContext } from \"../deploymentContext\";\nimport {\n  DeploymentParameters,\n  MapParameters,\n  StepElem,\n  StepProps,\n} from \"../common\";\nimport { getMapData, login } from \"../api\";\nimport DeploymentImage from \"../media/deployment.png\";\nimport Outputs from \"../media/outputs.png\";\n\nconst classNames = mergeStyleSets({\n  imageContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginVertical: 20,\n    width: '80%'\n  },\n  images: {\n    width: \"40%\",\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  deployBtn: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  form: {\n    width: \"60%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"start\",\n  },\n  formItems: {\n    width: \"100%\",\n  },\n  clearText: {\n    pointerEvents: 'all',\n    cursor: 'pointer'\n  }\n});\n\nconst Deploy = React.memo(\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\n    const { store, tenantId, subscriptionId, mapAccountName } =\n      useContext(DeploymentContext);\n\n    const [data, setData] = useState<DeploymentParameters & MapParameters>({\n      tenantId,\n      subscriptionId,\n      mapAccountName,\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        process: async () => {\n          const creds = await login(data.tenantId!);\n          const mapData = await getMapData(\n            creds,\n            data.subscriptionId!,\n            data.mapAccountName!\n          );\n          if (mapData) {\n            store({\n              ...data,\n              managementCredentials: creds,\n              mapSubscriptionKey: mapData.mapSubscriptionKey,\n              resourceGroup:mapData.resourceGroupName\n            });\n          }\n        },\n      }),\n      [store, data]\n    );\n    const nextEnabled = useRef(false);\n\n    useEffect(() => {\n      if (\n        data.subscriptionId &&\n        data.tenantId &&\n        data.mapAccountName &&\n        !nextEnabled.current\n      ) {\n        enableNext();\n        nextEnabled.current = true;\n      }\n    }, [data, enableNext]);\n\n    return (\n      <div className={classNames.container}>\n        <h2>Deploy Maps account to your Azure Subscription</h2>\n        <h4>Follow these steps to deploy an Azure Maps account.</h4>\n        <p>\n          1. Click on the \"Deploy\" button to deploy the solution to your azure\n          subscription.\n        </p>\n        <p>\n          2. Once deployment gets completed head over the \"outputs\" section and\n          copy the values into the form below.\n        </p>\n        <a\n          href=\"https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2Flucadruda%2Fiotc-indoor-maps%2Findoor_maps%2Fsetup%2Fsrc%2Fazure%2Fazuredeploy.json\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <div className={classNames.deployBtn}>\n            <img src=\"https://aka.ms/deploytoazurebutton\" alt=\"Deploy to Azure\" />\n          </div>\n        </a>\n        <div className={classNames.imageContainer}>\n          <img\n            className={classNames.images}\n            src={DeploymentImage}\n            alt=\"deployment\"\n          />\n          <img className={classNames.images} src={Outputs} alt=\"outputs\" />\n        </div>\n\n        <div className={classNames.form}>\n          <TextField\n            className={classNames.formItems}\n            label=\"Subscription Id\"\n            value={data.subscriptionId}\n            required\n            iconProps={{\n              iconName: 'Cancel', onClick: (e) => {\n                setData((current) => ({ ...current, subscriptionId: '' }));\n              },\n              style: {\n                pointerEvents: 'all',\n                cursor: 'pointer'\n              }\n            }}\n            onChange={(e, val) => {\n              setData((current) => ({ ...current, subscriptionId: val! }));\n            }}\n          />\n          <TextField\n            label=\"Tenant Id\"\n            className={classNames.formItems}\n            value={data.tenantId}\n            required\n            onChange={(e, val) => {\n              setData((current) => ({ ...current, tenantId: val! }));\n            }}\n            iconProps={{\n              iconName: 'Cancel', onClick: (e) => {\n                setData((current) => ({ ...current, tenantId: '' }));\n              },\n              style: {\n                pointerEvents: 'all',\n                cursor: 'pointer'\n              }\n            }}\n          />\n          {/* <TextField\n            label=\"Resource Group Name\"\n            value={data.resourceGroup}\n            onChange={(e, val) => {\n              setData((current) => ({ ...current, resourceGroup: val! }));\n            }}\n          /> */}\n          <TextField\n            label=\"Map Account Name\"\n            className={classNames.formItems}\n            required\n            value={data.mapAccountName}\n            onChange={(e, val) => {\n              setData((current) => ({\n                ...current,\n                mapAccountName: val!,\n              }));\n            }}\n            iconProps={{\n              iconName: 'Cancel', onClick: (e) => {\n                setData((current) => ({ ...current, mapAccountName: '' }));\n              },\n              style: {\n                pointerEvents: 'all',\n                cursor: 'pointer'\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  })\n);\nexport default Deploy;\n","import {\n  Icon,\n  mergeStyleSets,\n  ProgressIndicator,\n  TextField,\n} from \"@fluentui/react\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { uploadPackage } from \"../api\";\nimport { DeploymentContext } from \"../deploymentContext\";\nimport { DrawingUploadData, formatBytes, StepElem, StepProps } from \"../common\";\n\nconst classNames = mergeStyleSets({\n  listGrid: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 20,\n  },\n  listGridItem: {\n    padding: 5,\n    width: 200,\n    height: 180,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    border: \"1px solid black\",\n  },\n  clickable: {\n    backgroundColor: \"#f3f2f1\",\n    \"&:hover\": {\n      backgroundColor: \"#FFFFFF\",\n      cursor: \"pointer\",\n    },\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  coordinates: {\n    marginTop: 90,\n  },\n  coordinatesForm: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    paddingHorizontal: 40,\n  },\n  description: {\n    margin: \"5%\",\n  },\n});\n\nconst Upload = React.memo(\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\n    const [coordinates, setCoordinates] = useState<[number, number]>([0, 0]);\n    const { mapSubscriptionKey, mapAccountName, store, drawingUUIDs } =\n      useContext(DeploymentContext);\n\n    const [items, setItems] = useState<(DrawingUploadData | null)[]>([\n      ...(drawingUUIDs ?? []),\n      null,\n    ]);\n\n    const nextEnabled = useRef(false);\n\n    const uploadFn = useCallback(\n      (acceptedFiles) => {\n        acceptedFiles.forEach((file: File) => {\n          const reader = new FileReader();\n          reader.onload = async () => {\n            const drawingUUid = await uploadPackage(\n              reader.result,\n              \"us\",\n              mapSubscriptionKey!,\n              (progress) => {\n                setItems((current) =>\n                  current.map((i) => {\n                    if (i?.name === file.name) {\n                      return { ...i, progress };\n                    }\n                    return i;\n                  })\n                );\n              }\n            );\n            if (drawingUUid) {\n              setItems((current) =>\n                current.map((i) => {\n                  if (i?.name === file.name) {\n                    return { ...i, uuid: drawingUUid };\n                  }\n                  return i;\n                })\n              );\n            }\n          };\n\n          reader.readAsArrayBuffer(file);\n          setItems((current) => [\n            { name: file.name, size: formatBytes(file.size), progress: 0 },\n            ...current,\n          ]);\n        });\n      },\n      [setItems, mapSubscriptionKey]\n    );\n\n    const { getRootProps, getInputProps } = useDropzone({\n      onDrop: uploadFn,\n      maxFiles: 1,\n      accept: \".zip\",\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        process: () => {\n          store({\n            drawingUUIDs: items.filter(\n              (i) => i !== null && i.uuid\n            ) as DrawingUploadData[],\n            ...(coordinates[0] !== 0 && coordinates[1] !== 0\n              ? { centerCoordinates: coordinates }\n              : {}),\n          });\n        },\n      }),\n      [store, items, coordinates]\n    );\n\n    useEffect(() => {\n      if (items.length > 1 && !nextEnabled.current) {\n        enableNext();\n        nextEnabled.current = true;\n      }\n    }, [items, enableNext]);\n\n    const onRenderCell = React.useCallback(\n      (item: DrawingUploadData | null, index) => {\n        return (\n          <div\n            key={`upload-b-${index}`}\n            className={`${classNames.listGridItem} ${item === null ? classNames.clickable : \"\"\n              }`}\n          >\n            {item === null ? (\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <div className={classNames.button}>\n                  <Icon iconName=\"AddIn\" />\n                  <h3>Add a drawing</h3>\n                </div>\n              </div>\n            ) : (\n              <div>\n                <h2>{item.name}</h2>\n                <ProgressIndicator\n                  label={\n                    item.progress < 1\n                      ? \"Uploading package...\"\n                      : \"Package ready.\"\n                  }\n                  description={item.uuid ?? \"\"}\n                  percentComplete={item.progress}\n                  progressHidden={item.progress === 1}\n                />\n                <h3>{item.size}</h3>\n              </div>\n            )}\n          </div>\n        );\n      },\n      [getInputProps, getRootProps]\n    );\n\n    if (!mapSubscriptionKey) {\n      return (\n        <div className={\"centered\"}>\n          <ProgressIndicator\n            className=\"pageload\"\n            description=\"Loading map details...\"\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h2>Upload building drawings</h2>\n        <div>\n          <h3 style={{ display: \"inline\" }}>Map account </h3>\n          <h4 style={{ display: \"inline\" }}> \"{mapAccountName}\" </h4>\n          <h3 style={{ display: \"inline\" }}>found.</h3>\n        </div>\n        <div className={classNames.description}>\n          <p>\n            Upload your drawings in zip format.\n            <br />\n            For drawing package requirements, follow details{\" \"}\n            <a href=\"https://docs.microsoft.com/en-us/azure/azure-maps/drawing-requirements\">\n              here\n            </a>\n          </p>\n        </div>\n        <div className={classNames.listGrid}>{items.map(onRenderCell)}</div>\n        <div className={classNames.coordinates}>\n          <p>\n            Optionally provide center coordinates to automatically zoom to\n            specific location at map loading.\n          </p>\n          <div className={classNames.coordinatesForm}>\n            <TextField\n              type=\"number\"\n              label=\"Latitude\"\n              value={coordinates[0].toString()}\n              onChange={(e, val) => {\n                setCoordinates((current) => {\n                  return [parseFloat(val!), current[1]];\n                });\n              }}\n            />\n            <TextField\n              type=\"number\"\n              label=\"Longitude\"\n              value={coordinates[1].toString()}\n              onChange={(e, val) => {\n                setCoordinates((current) => {\n                  return [current[0], parseFloat(val!)];\n                });\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  })\n);\n\nexport default Upload;\n","import { DefaultButton, mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  convertPackage,\n  createOrUpdateDataSet,\n  createStateset,\n  createTileset,\n} from \"../api\";\nimport { DeploymentContext } from \"../deploymentContext\";\nimport { StepElem, StepProps } from \"../common\";\n\nconst classNames = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    margin: 20\n  }\n});\n\nconst Configure = React.memo(\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\n    const [text, setText] = useState({ label: \"\", description: \"\" });\n    const [executing, setExecuting] = useState(false);\n    const { drawingUUIDs, mapSubscriptionKey, mapAccountName, statesetId, store } =\n      useContext(DeploymentContext);\n\n    const execute = useCallback(async () => {\n      if (!drawingUUIDs) {\n        return;\n      }\n      const convIds: string[] = [];\n      setExecuting(true);\n      for (const drawingUUID of drawingUUIDs) {\n        setText({\n          label: `Converting packages. Please wait...`,\n          description: `Converting package ${drawingUUID}`,\n        });\n        const convId = await convertPackage(\n          drawingUUID?.uuid!,\n          \"us\",\n          mapSubscriptionKey!\n        );\n        if (convId) {\n          convIds.push(convId);\n        }\n      }\n\n      let datasetId;\n      for (const convId of convIds) {\n        setText({\n          label: `Creating data set`,\n          description: datasetId ?? \"This might take some time.\",\n        });\n        datasetId = await createOrUpdateDataSet(\n          convId,\n          \"us\",\n          mapSubscriptionKey!,\n          datasetId\n        );\n      }\n      setText({\n        label: `Dataset created. Creating tileset ...`,\n        description: datasetId ?? \"\",\n      });\n      if (datasetId) {\n        const tileSetId = await createTileset(\n          datasetId,\n          \"us\",\n          mapSubscriptionKey!\n        );\n        setText({\n          label: `Tileset created. Creating stateset ...`,\n          description: tileSetId ?? \"\",\n        });\n        if (tileSetId) {\n          const statesetId = await createStateset(\n            datasetId,\n            \"us\",\n            mapSubscriptionKey!\n          );\n          setText({\n            label: `State set created.`,\n            description: statesetId ?? \"\",\n          });\n          store({ tileSetId, statesetId });\n          enableNext();\n        }\n      }\n    }, [drawingUUIDs, mapSubscriptionKey, setText, store, setExecuting, enableNext]);\n\n    useEffect(() => {\n      if (statesetId) {\n        enableNext();\n      }\n    }, [statesetId, enableNext]);\n\n    if (statesetId) {\n      // configuration has ended.\n      return (<div className={classNames.container}>\n        <span>You already have configure your map account <mark>{mapAccountName}</mark>.</span>\n        <span>Click on the \"Restart\" button if you want to start another conversion, otherwise click \"Next\" to continue the setup.</span>\n        <DefaultButton className={classNames.button} text='Restart' onClick={execute} />\n      </div>)\n    }\n    else if (executing) {\n      return (\n        <div className={classNames.container}>\n          <ProgressIndicator\n            {...text}\n            percentComplete={statesetId ? 1 : undefined}\n          />\n        </div>\n      );\n    }\n    return (<div className={classNames.container}>\n      <h4>You have uploaded {drawingUUIDs?.length} drawings.</h4>\n      <span>The packages now need to be converted and assign to a dataset. <br />Click on the <mark>\"Start\"</mark> button below to start the process.</span>\n      <span>This may take several minutes. Please do not close this page until all required steps are completed.</span>\n      <DefaultButton className={classNames.button} text='Start' onClick={execute} />\n    </div>)\n  })\n);\n\nexport default Configure;\n","import { IotCentralModels } from \"@azure/arm-iotcentral\";\nimport { Icon, mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport { createCentralApiToken, listCentralApps } from \"../api\";\nimport { DeploymentContext } from \"../deploymentContext\";\nimport { StepElem, StepProps } from \"../common\";\n\nconst classNames = mergeStyleSets({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  listGrid: {\n    width: \"90%\",\n    height: 600,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 20,\n    flexWrap: \"wrap\",\n    overflowY: \"auto\",\n  },\n  listGridItem: {\n    padding: 5,\n    width: 200,\n    height: 180,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    border: \"1px solid black\",\n  },\n  selected: {\n    backgroundColor: \"#f3f2f1\",\n  },\n  clickable: {\n    \"&:hover\": {\n      backgroundColor: \"#FFFFFF\",\n      cursor: \"pointer\",\n    },\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  description: {\n    margin: \"5%\",\n  },\n});\n\nconst Central = React.memo(\n  React.forwardRef<StepElem, StepProps>(({ enableNext }, ref) => {\n    const [apps, setApps] = useState<IotCentralModels.App[] | null>(null);\n    const [selectedApp, setSelectedApp] = useState<number | null>(null);\n    const { managementCredentials, subscriptionId, centralDetails, store } =\n      useContext(DeploymentContext);\n\n    const nextEnabled = useRef(false);\n\n    const loadApps = useCallback(\n      async (credentials, subscriptionId) => {\n        setApps(\n          await listCentralApps(\n            credentials,\n            subscriptionId\n          )\n        );\n      },\n      [setApps]\n    );\n\n    useEffect(() => {\n      if (apps && centralDetails) {\n        setSelectedApp(\n          apps.findIndex(\n            (a) => a.subdomain === centralDetails.appUrl.split(\".\")[0]\n          )\n        );\n      }\n    }, [apps, centralDetails]);\n\n    useEffect(() => {\n      if (managementCredentials) {\n        loadApps(managementCredentials, subscriptionId);\n      }\n    }, [loadApps, managementCredentials, subscriptionId]);\n\n    useEffect(() => {\n      if (selectedApp !== null && !nextEnabled.current) {\n        enableNext();\n        nextEnabled.current = true;\n      }\n    }, [selectedApp, enableNext]);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        process: async () => {\n          const apiKey = await createCentralApiToken(\n            managementCredentials!,\n            // getCredentialForToken({\n            //   token:\n            //     \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCIsImtpZCI6Imwzc1EtNTBjQ0g0eEJWWkxIVEd3blNSNzY4MCJ9.eyJhdWQiOiJodHRwczovL2FwcHMuYXp1cmVpb3RjZW50cmFsLmNvbSIsImlzcyI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0Ny8iLCJpYXQiOjE2MzU3ODIzMzgsIm5iZiI6MTYzNTc4MjMzOCwiZXhwIjoxNjM1Nzg2MjM4LCJhY3IiOiIxIiwiYWlvIjoiQVVRQXUvOFRBQUFBR3lORDNqaWFkcy9zL1puVVYyV0E1QXNLL0ZnaTZqalFMUFZ6M2lrZEZ3dXhGcnErYStDZGM4M1d2YndwUjlrTjN5THo1bmlJK2dSbldzaTZUSGJETVE9PSIsImFtciI6WyJyc2EiLCJtZmEiXSwiYXBwaWQiOiIwNGIwNzc5NS04ZGRiLTQ2MWEtYmJlZS0wMmY5ZTFiZjdiNDYiLCJhcHBpZGFjciI6IjAiLCJkZXZpY2VpZCI6ImE1MWYxNDNmLTkyMmUtNDkzZi1hMzQzLTcxMDUwNjdlYzExYSIsImZhbWlseV9uYW1lIjoiRHJ1ZGEiLCJnaXZlbl9uYW1lIjoiTHVjYSIsImlwYWRkciI6IjkzLjUxLjUxLjEzNSIsIm5hbWUiOiJMdWNhIERydWRhIiwib2lkIjoiMzgxMmM1ZTAtMGRkNi00NTYyLTlhZTYtZmQ4OTUxMjk4MTg0Iiwib25wcmVtX3NpZCI6IlMtMS01LTIxLTIxMjc1MjExODQtMTYwNDAxMjkyMC0xODg3OTI3NTI3LTIxMDk1NTk4IiwicHVpZCI6IjEwMDMzRkZGOTdBMjE1NzkiLCJyaCI6IjAuQVJvQXY0ajVjdkdHcjBHUnF5MTgwQkhiUjVWM3NBVGJqUnBHdS00Qy1lR19lMFlhQUlrLiIsInNjcCI6InVzZXJfaW1wZXJzb25hdGlvbiIsInN1YiI6Ik9tU19lU1g5UWhRU0JxbjFuX3BybzI3SHpBY014b2FFVWNwSnFwZEttQzAiLCJ0aWQiOiI3MmY5ODhiZi04NmYxLTQxYWYtOTFhYi0yZDdjZDAxMWRiNDciLCJ1bmlxdWVfbmFtZSI6Imx1ZHJ1ZGFAbWljcm9zb2Z0LmNvbSIsInVwbiI6Imx1ZHJ1ZGFAbWljcm9zb2Z0LmNvbSIsInV0aSI6IjZvUlZKZFVQekVPSlZRb2puNTlkQUEiLCJ2ZXIiOiIxLjAifQ.Ex_xF2Q4ao2lwDZviJVbHxDp1dwVRIV4F2kmtIogwq7wfqzTzSMAh5NntWW2YQhKJoE4euGZlW6UgkfB4tFmMdag_oZ4e_dEQslTKLEeP2yctn-3FF6-QFDsuDkw2aVLHn74QkObz1GmgfXxYU6UgjKUXXIPLi7-foLLFtQ6wUYLr0QSzbLTevBAAP_1jEE_oNt80XRMl_A3fYlP3HRe5jBOSzDZ1n0WlCowzHFUG5ovxft2jwCuPkTMGW9cVc0cO2juTg_JTXuAAj0wNZeoTlN7Yxd8WBmO4iA27WE57WcG60_N7ZCbDMLu2MknK21lHenYjje0gj0RBvott-HAcA\",\n            //   expiresOnTimestamp: 1635786280,\n            // }),\n            `${apps![selectedApp!].subdomain!}.azureiotcentral.com`\n          );\n          console.log(apiKey);\n          if (apiKey) {\n            store({\n              centralDetails: {\n                appUrl: `${apps![selectedApp!].subdomain!}.azureiotcentral.com`,\n                apiKey,\n              },\n            });\n          }\n        },\n      }),\n      [managementCredentials, apps, selectedApp, store]\n    );\n\n    const onRenderCell = React.useCallback(\n      (item: IotCentralModels.App | null, index) => {\n        return (\n          <div\n            key={`central-app-${index}`}\n            className={`${classNames.listGridItem} ${classNames.clickable} ${selectedApp === index ? classNames.selected : ''}`}\n            onClick={() => {\n              if (selectedApp === index) {\n                setSelectedApp(null);\n              }\n              else {\n                setSelectedApp(index);\n              }\n            }}\n          >\n            <div>\n              <h2>{item?.displayName}</h2>\n              <p>{`https://${item?.subdomain}.azureiotcentral.com`}</p>\n              {selectedApp === index && <Icon iconName=\"CheckMark\" />}\n            </div>\n          </div>\n        );\n      },\n      [setSelectedApp, selectedApp]\n    );\n    if (!apps) {\n      return (\n        <div className={\"centered\"}>\n          <ProgressIndicator\n            className=\"pageload\"\n            description=\"Loading IoT Central applications\"\n          />\n        </div>\n      );\n    }\n    return (\n      <div className={classNames.container}>\n        <h2>Select IoT Central application</h2>\n        <div className={classNames.listGrid}>{apps.map(onRenderCell)}</div>\n      </div>\n    );\n  })\n);\n\nexport default Central;\n","import { DefaultButton, mergeStyleSets, ProgressIndicator } from \"@fluentui/react\";\nimport React, { useCallback, useContext, useState } from \"react\";\nimport { createStaticApp } from \"../api\";\nimport { DeploymentContext } from \"../deploymentContext\";\nimport { StepElem, StepProps } from \"../common\";\n\nconst classNames = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  content: {\n    width: \"90%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  button: {\n    margin: 20\n  }\n});\n\nconst Site = React.memo(\n  React.forwardRef<StepElem, StepProps>(() => {\n    const [executing, setExecuting] = useState(false);\n    const [text] = useState({\n      label: \"Creating web site\",\n      description:\n        \"This might take a while. Please don't close the page until creation is completed.\",\n    });\n    const {\n      managementCredentials,\n      subscriptionId,\n      resourceGroup,\n      mapSubscriptionKey,\n      tileSetId,\n      statesetId,\n      centralDetails,\n      centerCoordinates,\n      siteUrl,\n      store\n    } = useContext(DeploymentContext);\n\n    // const nextEnabled = useRef(false);\n\n    const createSite = useCallback(\n      async () => {\n        store({ siteUrl: undefined })\n        setExecuting(true);\n        const siteUrl = await createStaticApp(\n          managementCredentials!,\n          subscriptionId!,\n          resourceGroup!,\n          {\n            iotcApiKey: centralDetails?.apiKey,\n            iotcAppUrl: centralDetails?.appUrl,\n            mapSubscriptionKey,\n            mapTilesetId: tileSetId,\n            mapStatesetId: statesetId,\n            mapLatitude: centerCoordinates\n              ? `${centerCoordinates[0]}`\n              : '',\n            mapLongitude: centerCoordinates\n              ? `${centerCoordinates[1]}`\n              : '',\n          }\n        );\n        if (siteUrl) {\n          store({ siteUrl });\n        }\n      },\n      [centralDetails, centerCoordinates, managementCredentials, subscriptionId, resourceGroup, mapSubscriptionKey, tileSetId, statesetId, setExecuting, store]\n    );\n\n    if (siteUrl) {\n      return (\n        <div className={classNames.container}>\n          <h2>Congratulations!!</h2>\n          <h4>Your website is available here:</h4>\n          <a href={siteUrl}>{siteUrl}</a>\n          <span>Would you like to publish your site again?</span>\n          <span>Click on the \"Re-Publish\" button below if your previous attempts failed.</span>\n          <DefaultButton className={classNames.button} text='Re-publish' onClick={async () => { await createSite(); }} />\n        </div>\n      );\n    }\n    else if (executing) {\n      return (\n        <div className={classNames.container}>\n          <ProgressIndicator {...text} />\n        </div>\n      );\n    }\n    return (<div className={classNames.container}>\n      <span>All required configuration steps are completed.</span>\n      <span>Click on the \"Publish\" button below to start publishing the website which will serve your map.</span>\n      <DefaultButton className={classNames.button} text='Publish' onClick={async () => { await createSite(); }} />\n    </div>)\n  })\n);\n\nexport default Site;\n","import { DefaultButton, mergeStyleSets } from \"@fluentui/react\";\nimport React, { useRef, useState } from \"react\";\nimport { StepElem, useSteps } from \"./common\";\nimport Deploy from \"./steps/Deploy\";\nimport Upload from \"./steps/Upload\";\nimport DeploymentProvider from \"./deploymentContext\";\nimport Configure from \"./steps/Configure\";\nimport Central from \"./steps/Central\";\nimport Site from \"./steps/Site\";\n\nconst styles = {\n  wizardBody: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  footer: {\n    marginBottom: 10,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: \"space-between\",\n    width: \"80%\",\n    marginTop: 10\n  },\n  arrow: {\n    alignItems: \"center\",\n    display: \"flex\",\n    width: 100,\n    justifyContent: \"space-evenly\",\n  },\n  icon: {\n    cursor: \"pointer\",\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyConten: 'center',\n    textAlign: 'center',\n    alignItems: 'center',\n    overflowY: 'auto',\n    height: '90%',\n    justifyContent: 'center'\n  }\n};\n\nconst classNames = mergeStyleSets(styles);\n\nconst App = React.memo(() => {\n  return (\n    <DeploymentProvider>\n      <Wizard />\n    </DeploymentProvider>\n  );\n});\n\nexport function Wizard() {\n  const [current, next, previous] = useSteps(0);\n  const [nextEnabled, setNextEnabled] = useState(false);\n  const totalSteps = 5;\n\n  const compRef = [\n    useRef<StepElem>(null),\n    useRef<StepElem>(null),\n    useRef<StepElem>(null),\n    useRef<StepElem>(null),\n    useRef<StepElem>(null),\n  ];\n\n  const renderComponent = (step: number) => {\n    switch (step) {\n      case 0:\n        return (\n          <Deploy ref={compRef[0]} enableNext={() => setNextEnabled(true)} />\n        );\n      case 1:\n        return (\n          <Upload ref={compRef[1]} enableNext={() => setNextEnabled(true)} />\n        );\n      case 2:\n        return (\n          <Configure ref={compRef[2]} enableNext={() => setNextEnabled(true)} />\n        );\n      case 3:\n        return (\n          <Central ref={compRef[3]} enableNext={() => setNextEnabled(true)} />\n        );\n      case 4:\n        return (\n          <Site ref={compRef[4]} enableNext={() => setNextEnabled(true)} />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={classNames.wizardBody}>\n      <div className={classNames.content}>\n        {renderComponent(current)}\n      </div>\n      <div className={classNames.footer}>\n        <DefaultButton\n          primary\n          text=\"Previous\"\n          iconProps={{ iconName: \"Back\" }}\n          onClick={previous}\n          style={current === 0 ? { visibility: \"hidden\" } : {}}\n        />\n        <DefaultButton\n          primary\n          text=\"Next\"\n          iconProps={{ iconName: \"Forward\" }}\n          disabled={current === totalSteps - 1 || !nextEnabled}\n          onClick={() => {\n            compRef[current].current?.process();\n            next();\n            setNextEnabled(false);\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { initializeIcons } from \"@fluentui/font-icons-mdl2\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\ninitializeIcons();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}